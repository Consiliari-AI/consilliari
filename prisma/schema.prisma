generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id                    String        @id @default(uuid())
  email                 String        @unique
  full_name             String
  email_verified        Boolean       @default(false)
  is_onboarding_completed Boolean       @default(false) 
  created_at            DateTime      @default(now())
  updated_at            DateTime      @updatedAt
  UserSettings          UserSettings?
  ResumeAnalysis        ResumeAnalysis?
  COSAnalysis           COSAnalysis?
  CareerGoals           CareerGoals[]

  @@map("Users")
}

model UserSettings {
  id             String   @id @default(uuid())
  user_id        String   @unique
  resume_content String   @db.Text
  resume         Json     @db.JsonB
  career_blueprint Json   @db.JsonB
  created_at     DateTime @default(now())
  updated_at     DateTime @updatedAt
  user           User     @relation(fields: [user_id], references: [id], onDelete: Cascade)

  @@map("UserSettings")
}

model ResumeAnalysis {
  id        String   @id @default(uuid())
  user_id   String   @unique
  analysis  Json     @db.JsonB
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  user      User     @relation(fields: [user_id], references: [id], onDelete: Cascade)

  @@map("ResumeAnalysis")
}

model COSAnalysis {
  id        String   @id @default(uuid())
  user_id   String   @unique
  analysis  Json     @db.JsonB
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  user      User     @relation(fields: [user_id], references: [id], onDelete: Cascade)

  @@map("COSAnalysis")
}

model CareerGoals {
  id                    String   @id @default(uuid())
  user_id               String
  goal_heading          String
  goal_description      String   @db.Text
  goal_progress         String
  goal_completion_status Boolean  @default(false)
  goal_deadline         DateTime?
  milestones            Json     @db.JsonB
  created_at            DateTime @default(now())
  updated_at            DateTime @updatedAt
  user                  User     @relation(fields: [user_id], references: [id], onDelete: Cascade)

  @@map("CareerGoals")
}
